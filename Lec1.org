* EE3011 Modelling and Control (Part II)
** Mo, Yilin
** School of EEE

#+BEGIN_SRC ipython :session
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
rc('font',**{'family':'sans-serif','sans-serif':['Arial']})
## for Palatino and other serif fonts use:
#rc('font',**{'family':'serif','serif':['Palatino']})
rc('text', usetex=True)
import control
from control.matlab import *

%load_ext tikzmagic

%matplotlib inline
%config InlineBackend.figure_format = 'svg'
#+END_SRC

#+RESULTS:

#+BEGIN_SRC ipython :session :file ./Lec1RC.svg :exports both
%%tikz -p circuitikz -f svg -S ./Lec1RC.svg
\draw (0,0) to [short, *-*] (6,0);
\draw (0,3) to [short, *-] (1,3)
to [R,l=R] (4,3) 
to [short, -*] (6,3);
\draw (4,3) to [C,l=C] (4,0);
\draw (0,0) to [open, american voltages, v^>=${v}_i(t)$] (0,3);
\draw (6,0) to [open, american voltages, v^>=${v}_o(t)$] (6,3);
#+END_SRC

#+RESULTS:
[[file:./Lec1RC.svg]]

#+BEGIN_SRC ipython :session :file  :exports both
# Define System

R = 1e3
C = 1e-4
τ = R * C
sys = tf([1],[τ,1])
#+END_SRC

#+RESULTS:

#+BEGIN_SRC ipython :session :file ./Lec1Step.svg  :exports both
# Step Response

t = np.linspace(0,2,500)
ω = 5
vi = np.ones(t.size)
_, vo = control.step_response(sys,t)

plt.plot(t,vi)
plt.plot(t,vo)
plt.xlabel(r't/sec')
plt.ylabel(r'Voltage');
plt.title(r'Step Response')
plt.ylim(0,1.5)

plt.show

#+END_SRC

#+RESULTS:
[[file:./Lec1Step.svg]]



#+BEGIN_SRC ipython :session :file ./Lec1Fre5.svg :exports both
t = np.linspace(0,10,500)
omega = 5
vi = 2 * np.sin(omega * t+30*2*np.pi/360)
_, vo, _ = control.forced_response(sys,t,vi)


plt.plot(t,vi)
plt.plot(t,vo)
plt.xlabel(r't/sec')
plt.ylabel(r'Voltage');
plt.title(r'$\omega$ = 5rad/s')

plt.show
#+END_SRC

#+RESULTS:
[[file:./Lec1Fre5.svg]]

#+BEGIN_SRC ipython :session :file ./Lec1Fre50.svg  :exports both
# Frequency response for ω=50rad/s

t = np.linspace(0,1,500)
ω = 50
vi = 2 * np.sin(ω * t+30*2*np.pi/360)
_, vo, _ = control.forced_response(sys,t,vi)

plt.plot(t,vi)
plt.plot(t,vo)
plt.xlabel(r't/sec')
plt.ylabel(r'Voltage');
plt.title(r'$\omega$ = 50rad/s')
plt.show;
#+END_SRC

#+RESULTS:
[[file:./Lec1Fre50.svg]]

#+BEGIN_SRC ipython :session :file ./Lec1Bode.svg  :exports both
# Bode Plot
control.bode_plot(sys);
#+END_SRC

#+RESULTS:
[[file:./Lec1Bode.svg]]

#+BEGIN_SRC ipython :session :file ./Lec1Nyquist.svg  :exports both
# Nyquist Plot
control.nyquist_plot(sys, omega = [1e-2, 1e3]);
#+END_SRC

#+RESULTS:
[[file:./Lec1Nyquist.svg]]

#+BEGIN_SRC ipython :session :file ./Lec1Summary.svg :exports both
%%tikz -l matrix,arrows -s 400,60 -f svg -S ./Lec1Summary.svg

\tikzstyle{point} = [coordinate]
\tikzstyle{box} = [rectangle, draw, semithick]
\node (plant) [box] {$G(s)$};
\node (p1) [left of=plant, anchor=east] {$A\sin(\omega t + \phi)$};
\node (p2) [right of=plant, anchor=west] {$A|G(j\omega)|\sin(\omega t + \phi+\angle G(j\omega))$};
\draw [semithick,-stealth'] (p1)--(plant);
\draw [semithick,-stealth'] (plant)--(p2);
#+END_SRC

#+RESULTS:
[[file:./Lec1Summary.svg]]




