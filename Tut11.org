#+TITLE: Tutorial 11: Relative Stability/Lead Compensator

#+BEGIN_SRC ipython :session :exports none
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
rc('text', usetex=True)
import control
from control.matlab import *
from numpy import log10 as log
%matplotlib inline
%config InlineBackend.figure_format = 'svg'

from matplotlib2tikz import save as tikz_save
#+END_SRC

#+RESULTS:

#+BEGIN_SRC ipython :session :file Tut111.svg :exports results
from numpy import convolve as conv;
ke = 0.05;
kg = 1.;
kr = 1.;
ka = 40;
ta = 0.1;
te = 0.5;
tg = 1.;
tr = 0.05;

num = ka*kg*kr;
den = [ta,1];
den = conv(den, [te, ke]);
den = conv(den, [tg, 1]);
den = conv(den, [tr, 1]);

sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,2,200));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Plot")
plt.semilogx(omega, mag, 'b')
yticks = np.linspace(-100, 60, 9) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.ylabel('magnitude(db)')
plt.grid(b=True, which='both')

plt.subplot(212)
g2, = plt.semilogx(omega, phase,'b')
plt.ylabel('phase(deg)')
plt.xlabel('frequency(rad/sec)')
yticks = np.linspace(0, -360, 5) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

tikz_save(
    'tikz/Tut111.tikz',
    figureheight = '\\figureheight',
    figurewidth = '\\figurewidth'
    )

plt.show()
#+END_SRC

#+RESULTS:
[[file:Tut111.svg]]

#+BEGIN_SRC ipython :session :file Tut112.svg :exports results
num = [100];
den = [1,0.1,1];
den = conv(den, [1e-6,1e-3,1]);
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-1,4,200));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Diagrams")
plt.semilogx(omega, mag, 'b')
yticks = np.linspace(100, -200, 7) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.ylabel('magnitude(db)')
plt.grid(b=True, which='both')

plt.subplot(212)
g2, = plt.semilogx(omega, phase,'b')
plt.ylabel('phase(deg)')
plt.xlabel('frequency(rad/sec)')
yticks = np.linspace(0, -360, 9) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

tikz_save(
    'tikz/Tut112.tikz',
    figureheight = '\\figureheight',
    figurewidth = '\\figurewidth'
    )

plt.show()
#+END_SRC

#+RESULTS:
[[file:Tut112.svg]]
