#+BEGIN_SRC ipython :session :exports none
import numpy as np
from numpy import log10 as log
import matplotlib
import matplotlib.pyplot as plt
from matplotlib import rc
rc('font',**{'family':'sans-serif','sans-serif':['Arial']})
## for Palatino and other serif fonts use:
#rc('font',**{'family':'serif','serif':['Palatino']})
rc('text', usetex=True)
import control
from control.matlab import *
from control import bode_plot as bode
from control import nyquist, margin
from numpy import convolve as conv

%load_ext tikzmagic

%matplotlib inline
%config InlineBackend.figure_format = 'svg'
#+END_SRC

#+RESULTS:

* Review
** Bode Plots

- Bode plots play an important role in frequency domain analysis and design.
- Bode plots of a transfer function $G(s)$ include two graphs:
  + Magnitude plot: $20\log_{10}|G(j\omega)|$ (dB) in linear scale v.s. $\omega$ in log scale.
  + Phase plot: $\angle G(j\omega)$ (degree) in linear scale v.s. $\omega$ in log-scale.

** Sketching Bode Plots
- A complex polynomial can always be factorized in to basic terms 
  + $K$
  + $s$
  + $\tau s + 1$
  + $$\left(\frac{s}{\omega_n}\right)^2 + 2\zeta \left(\frac{s}{\omega_n}\right) + 1,$$ where $-1<\zeta < 1$. (*Why?*)
- To create the Bode plot of a complex rational transfer function, we only need to understand the Bode plots of simple polynomials

** Example 1

\begin{align}
G(s) = \frac{2000(s+0.5)}{s(s+10)(s+50)} = \frac{2(2s+1)}{s(0.1s+1)(0.02s+1)}.
\end{align}

*** Step 1: Decompose the Transfer Function into Basic Factors

| Factor        | Corner Frequency |
|---------------+------------------|
| 2             |                  |
| $1/s$         |                  |
| $2s+1$        |              0.5 |
| $1/(0.1s+1)$  |               10 |
| $1/(0.02s+1)$ |               50 |

By adding the Bode plots of the above factors together, we can get the Bode plot of $G(s)$

#+BEGIN_SRC ipython :session :file assets/Lec3Example1a.svg :exports results
num = [2];
den = [1];
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,3,100));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Plot of $2$")
plt.semilogx(omega, mag, 'b')
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx(omega, phase,'b')
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')
yticks = np.linspace(-45, 45, 3) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC

#+RESULTS:
[[file:assets/Lec3Example1a.svg]]

#+BEGIN_SRC ipython :session :file assets/Lec3Example1b.svg :exports results
num = [1];
den = [1,0];
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,3,100));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Plot of $1/s$")
plt.semilogx(omega, mag, 'b')
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx(omega, phase,'b')
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')
yticks = np.linspace(-90, 0, 3) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC

#+RESULTS:
[[file:assets/Lec3Example1b.svg]]

#+BEGIN_SRC ipython :session :file assets/Lec3Example1c.svg :exports results
num = [2,1];
den = [1];
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,3,100));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Plot of $2s+1$")
plt.semilogx(omega, mag, 'b')
plt.semilogx([1e-2,0.5,1e3], [0,0,20*log(2e3)], 'r--')
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx(omega, phase,'b')
plt.semilogx([1e-2,0.05,5,1e3], [0,0,90,90], 'r--')
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')
yticks = np.linspace(0, 90, 3) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC

#+RESULTS:
[[file:assets/Lec3Example1c.svg]]

#+BEGIN_SRC ipython :session :file assets/Lec3Example1d.svg :exports results
num = [1];
den = [0.1,1];
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,3,100));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Plot of $1/(0.1s+1)$")
plt.semilogx(omega, mag, 'b')
plt.semilogx([1e-2,1e1,1e3], [0,0,-40], 'r--')
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx(omega, phase,'b')
plt.semilogx([1e-2,1e0,1e2,1e3], [0,0,-90,-90], 'r--')
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')
yticks = np.linspace(-90, 0, 3) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC

#+RESULTS:
[[file:assets/Lec3Example1d.svg]]
#+BEGIN_SRC ipython :session :file assets/Lec3Example1e.svg :exports results
num = [1];
den = [0.02,1];
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,3,100));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
plt.title("Bode Plot of $1/(0.02s+1)$")
plt.semilogx(omega, mag, 'b')
plt.semilogx([1e-2,50,1e3], [0,0,-20*log(1e3/50)], 'r--')
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx(omega, phase,'b')
plt.semilogx([1e-2,5,500,1e3], [0,0,-90,-90], 'r--')
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')
yticks = np.linspace(-90, 0, 3) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC

#+RESULTS:
[[file:assets/Lec3Example1e.svg]]

*** Step 2: Determine the Plot at the Low Frequency
- For low frequency, only need to look at the constant $K$ and $s^N$ term.
- Draw the plot of $s^N$ first
  - Magnitude: a straight line passes through $(1,0dB)$ with a slope of $20NdB$.
  - Phase: a horizontal line at $90N^\circ$.
- Adding the constant term $K$
  - Magnitude: add $20\log|K|$
  - Phase: If $K > 0$, do nothing. If $K < 0$, subtract $180^\circ$.
#+BEGIN_SRC ipython :session :file assets/Lec3Example1f.svg :exports results
plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
magof2 = 20*log(2)
plt.title("Bode Plot of $2/s$")
plt.semilogx([1e-2,1e3], [40,-60], 'r--')
plt.semilogx([1e-2,1e3], np.array([40,-60])+magof2, 'r')
yticks = np.linspace(-60, 60, 7) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.annotate('(1,0dB)', xy=(1e0,0), xytext=(1e0, -20),
            arrowprops=dict(arrowstyle='->'),
            horizontalalignment='center',
            verticalalignment='top', 
            )
plt.annotate('1/s', xy=(1e-1,20), xytext=(1e-1, -40),
            arrowprops=dict(arrowstyle='->'),
            horizontalalignment='center',
            verticalalignment='top', 
            )
plt.annotate('2/s', xy=(1e2,-40), xytext=(1e2, magof2),
            arrowprops=dict(arrowstyle='->'),
            horizontalalignment='center',
            verticalalignment='bottom', 
            )
plt.annotate('+%.2fdB' % magof2, xy=(1e1,-40), xytext=(1e1, 20),
            arrowprops=dict(arrowstyle='<-'),
            horizontalalignment='center',
            verticalalignment='bottom', 
            )
plt.yticks(yticks, ylabels)
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx([1e-2,1e3], [-90,-90], 'r')
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')
yticks = np.linspace(-180, 0, 5) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC 

#+RESULTS:
[[file:assets/Lec3Example1f.svg]]
*** Step 3: Add First and Second Order Terms

| Factor        | Corner Frequency | 
| $2s+1$        |              0.5 |
| $1/(0.1s+1)$  |               10 |
| $1/(0.02s+1)$ |               50 |

- Magnitude
For $(\tau s+1)^N$, change the slope at corner frequency $1/\tau$ by $20N$.

| Frequency    | Low | 0.5 |  10 |  50 |
| Slope Change |     | +20 | -20 | -20 |
| Slope        | -20 |   0 | -20 | -40 |
- Phase
For $(\tau s+1)^N$
- change the slope at $0.1/\tau$ by $45N$.
- change the slope at $10/\tau$ by $-45N$.

| Frequency    | Low | 0.05 |   1 |       5 | 100 | 500 |
| Slope Change |     |  +45 | -45 | -45 -45 | +45 | +45 |
| Slope        |   0 |   45 |   0 |     -90 | -45 |  0  |
#+BEGIN_SRC ipython :session :file assets/Lec3Example1g.svg :exports results
plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
magof2 = 20*log(2)
plt.title("Bode Plot of $G(s)$")
plt.semilogx([1e-2,1e3], np.array([40,-60])+magof2, 'r--')

freqs = [1e-2,0.5,10,50,1e3];
slopes = [-20,0,-20,-40];
mags = [40+20*log(2),0,0,0,0];
for i in range(1, len(freqs)):
    mags[i] = mags[i-1] + slopes[i-1]*(log(freqs[i])-log(freqs[i-1]))
    plt.annotate('%g' % slopes[i-1], xy=(1,1), xytext=(np.sqrt(freqs[i-1]*freqs[i]), -50),
                horizontalalignment='center',
                verticalalignment='center', 
                )

plt.semilogx(freqs,mags, 'r')

for freq in [0.5, 10, 50]:
    plt.annotate('%g' %freq, xy=(freq,-50), xytext=(freq, 50),
                arrowprops=dict(arrowstyle='-'),
                horizontalalignment='center',
                verticalalignment='center', 
                )

yticks = np.linspace(-60, 60, 7) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
plt.semilogx([1e-2,1e3], [-90,-90], 'r--')
freqs = [1e-2,0.05,1,5,100,500,1e3]
slopes = [0,45,0,-90,-45,0]
phases = [-90,0,0,0,0,0,0]
for i in range(1, len(freqs)):
    phases[i] = phases[i-1] + slopes[i-1]*(log(freqs[i])-log(freqs[i-1]))
    plt.annotate('%g' % slopes[i-1], xy=(freq,-170), xytext=(np.sqrt(freqs[i-1]*freqs[i]), -170),
                horizontalalignment='center',
                verticalalignment='center', 
                )

plt.semilogx(freqs, phases, 'r')

for freq in [0.05, 1, 5, 100, 500]:
    plt.annotate('%g' %freq, xy=(freq,-170), xytext=(freq, -10),
                arrowprops=dict(arrowstyle='-'),
                horizontalalignment='center',
                verticalalignment='center', 
                )
plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')

yticks = np.linspace(-180, 0, 5) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC 

#+RESULTS:
[[file:assets/Lec3Example1g.svg]]

*** Step 4 (Optional): Check your result in Matlab
#+BEGIN_SRC ipython :session :file tmp.svg :exports code
num = [2000,1000];
den = [1,60,500,0];
sys = tf(num, den);
bode(sys);
#+END_SRC

#+RESULTS:
[[file:tmp.svg]]

#+BEGIN_SRC ipython :session :file assets/Lec3Example1h.svg :exports results
num = [2000,1000];
den = [1,60,500,0];
sys = tf(num, den);
mag, phase, omega = control.bode_plot(sys, dB=True, Plot=False, omega=np.logspace(-2,3,100));

plt.subplots_adjust(hspace=0.4)

plt.subplot(211)
magof2 = 20*log(2)
plt.title("Bode Plot of $G(s)$")

freqs = [1e-2,0.5,10,50,1e3];
slopes = [-20,0,-20,-40];
mags = [40+20*log(2),0,0,0,0];
for i in range(1, len(freqs)):
    mags[i] = mags[i-1] + slopes[i-1]*(log(freqs[i])-log(freqs[i-1]))

plt.semilogx(omega,mag, 'b')
plt.semilogx(freqs,mags, 'r--')

yticks = np.linspace(-60, 60, 7) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.ylabel('Magnitude(dB)')
plt.grid(b=True, which='both')

plt.subplot(212)
freqs = [1e-2,0.05,1,5,100,500,1e3]
slopes = [0,45,0,-90,-45,0]
phases = [-90,0,0,0,0,0,0]
for i in range(1, len(freqs)):
    phases[i] = phases[i-1] + slopes[i-1]*(log(freqs[i])-log(freqs[i-1]))

plt.semilogx(omega,phase, 'b')
plt.semilogx(freqs, phases, 'r--')

plt.ylabel('Phase(deg)')
plt.xlabel('Frequency(rad/sec)')

yticks = np.linspace(-180, 0, 5) 
ylabels = [(str(ytick)) for ytick in yticks]
plt.yticks(yticks, ylabels)
plt.grid(b=True, which='both')

plt.show()
#+END_SRC 

#+RESULTS:
[[file:assets/Lec3Example1h.svg]]
